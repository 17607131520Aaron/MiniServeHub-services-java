# MiniServeHub 统一配置文件
# 所有环境配置都通过环境变量控制

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  tomcat:
    uri-encoding: UTF-8
    max-threads: ${TOMCAT_MAX_THREADS:200}
    min-spare-threads: ${TOMCAT_MIN_THREADS:10}
    accept-count: ${TOMCAT_ACCEPT_COUNT:100}
    max-connections: ${TOMCAT_MAX_CONNECTIONS:8192}

spring:
  application:
    name: miniservehub-services
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:test}
  
  # 数据源配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:miniservehub_test}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=${DB_SSL:false}&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=${DB_ALLOW_PUBLIC_KEY:true}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:123456789}
    druid:
      # 连接池配置
      initial-size: ${DRUID_INITIAL_SIZE:10}
      min-idle: ${DRUID_MIN_IDLE:10}
      max-active: ${DRUID_MAX_ACTIVE:50}
      max-wait: ${DRUID_MAX_WAIT:60000}
      time-between-eviction-runs-millis: ${DRUID_EVICTION_RUNS:60000}
      min-evictable-idle-time-millis: ${DRUID_MIN_EVICTABLE:300000}
      max-evictable-idle-time-millis: ${DRUID_MAX_EVICTABLE:900000}
      # 连接验证
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 预编译语句缓存
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 监控配置
      filters: stat,wall,slf4j
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=${DRUID_SLOW_SQL_MILLIS:3000}
      # Druid监控界面
      stat-view-servlet:
        enabled: ${DRUID_ENABLED:true}
        url-pattern: /druid/*
        login-username: ${DRUID_USERNAME:admin}
        login-password: ${DRUID_PASSWORD:123456}
        reset-enable: false
        allow: ${DRUID_ALLOW_IPS:127.0.0.1,10.0.0.0/8}
      # Druid Web过滤器
      web-stat-filter:
        enabled: ${DRUID_ENABLED:true}
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"

  # JPA配置
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: ${JPA_FORMAT_SQL:true}
        use_sql_comments: ${JPA_USE_COMMENTS:true}
        jdbc:
          batch_size: ${JPA_BATCH_SIZE:50}
        order_inserts: ${JPA_ORDER_INSERTS:true}
        order_updates: ${JPA_ORDER_UPDATES:true}
    open-in-view: false

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: ${REDIS_TIMEOUT:10000ms}
      lettuce:
        pool:
          max-active: ${REDIS_MAX_ACTIVE:16}
          max-wait: ${REDIS_MAX_WAIT:-1ms}
          max-idle: ${REDIS_MAX_IDLE:8}
          min-idle: ${REDIS_MIN_IDLE:2}
        cluster:
          refresh:
            adaptive: ${REDIS_CLUSTER_ADAPTIVE:false}
            period: ${REDIS_CLUSTER_PERIOD:30s}

  # 缓存配置
  cache:
    type: redis
    redis:
      time-to-live: ${CACHE_TTL:1800000}
      cache-null-values: false

  # JSON配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

# MyBatis Plus配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
  global-config:
    db-config:
      id-type: ASSIGN_ID
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath*:mapper/**/*Mapper.xml

# Knife4j配置
knife4j:
  enable: true
  openapi:
    title: MiniServeHub API文档
    description: 企业级Java后端服务API接口文档
    version: 1.0.0
    concat: miniservehub@example.com
  setting:
    language: zh_cn

# 日志配置
logging:
  level:
    com.miniservehub: ${LOG_LEVEL_MINISERVEHUB:DEBUG}
    org.springframework.web: ${LOG_LEVEL_WEB:INFO}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL_SQL_BINDER:TRACE}
    org.springframework.cache: ${LOG_LEVEL_CACHE:DEBUG}
    org.springframework.security: ${LOG_LEVEL_SECURITY:WARN}
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n'
  file:
    name: ${LOG_FILE_NAME:logs/miniservehub.log}
  logback:
    rollingpolicy:
      max-file-size: ${LOG_MAX_FILE_SIZE:100MB}
      max-history: ${LOG_MAX_HISTORY:30}
      total-size-cap: ${LOG_TOTAL_SIZE_CAP:1GB}

# JWT配置
jwt:
  secret: ${JWT_SECRET:MiniServeHub2024SecretKeyForJWTTokenGenerationAndValidation}
  expiration: ${JWT_EXPIRATION:86400}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800}
  header: Authorization
  token-prefix: "Bearer "

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS:health,info,metrics,prometheus}
      base-path: ${MANAGEMENT_BASE_PATH:/actuator}
  endpoint:
    health:
      show-details: ${MANAGEMENT_HEALTH_DETAILS:always}
  server:
    port: ${MANAGEMENT_PORT:9090}
  metrics:
    export:
      prometheus:
        enabled: true

# 业务配置
miniservehub:
  env: ${MINISERVEHUB_ENV:test}
  debug: ${MINISERVEHUB_DEBUG:true}
  cache:
    default-ttl: ${MINISERVEHUB_CACHE_TTL:600}
  security:
    enable-cors: ${MINISERVEHUB_CORS:true}
    jwt:
      secret: ${JWT_SECRET:MiniServeHub2024SecretKeyForJWTTokenGenerationAndValidation}
      expiration: ${JWT_EXPIRATION:86400}